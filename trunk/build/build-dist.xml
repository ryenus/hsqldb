<?xml version="1.0"?>
<!--
$Id$
-->
<project name="hsqldb-dist" default="dist" basedir=".."
         xmlns:ivy="antlib:org.apache.ivy.ant">
<!--  See file "build-dist.gradle" for distribution-building instructions.  -->

  <import file="build.xml"/>

  <target name="state-check"
          description="Verifies that the current directory + Ant build env. are acceptable for building a distribution">
    <available property="_svn.exists" file=".svn"/>
    <fail if="_svn.exists"
          message="You need to 'export' the project to build distro"/>

    <condition property="_label.ok">
      <equals arg1="${hsqldb.version}" arg2="${build.label}"/>
    </condition>
    <fail unless="_label.ok">Ant properties 'build.label' and 'hsqldb.version' must be equal.
I suggest setting the value(s) in a "build.properties" file.</fail>
    <condition property="_vendor.ok">
      <equals arg1="${hsqldb.vendor}" arg2="${build.vendor}"/>
    </condition>
    <fail unless="_vendor.ok">Ant properties 'build.vendor' and 'hsqldb.vendor' must be equal.
I suggest setting the value(s) in an external properties file and using the Ant
"-propertyfile" switch.</fail>

    <copy file="doc-src/readme-template.txt" tofile="tmp/readme-generated.txt"
          overwrite="true">
      <filterchain>
        <expandproperties/>
        <tokenfilter>
          <!-- Intention is to strip out all RCS keywords, since their values
               would cause false positives for our file comparison below.  -->
          <replaceregex pattern="\$[A-Z][a-z]+: .+? \$" flags="g"/>
        </tokenfilter>
      </filterchain>
    </copy>
    <copy file="readme.txt" tofile="tmp/readme-svn.txt" overwrite="true">
      <filterchain>
        <tokenfilter>
          <!-- Intention is to strip out all RCS keywords, since their values
               would cause false positives for our file comparison below.  -->
          <replaceregex pattern="\$[A-Z][a-z]+: .+? \$" flags="g"/>
        </tokenfilter>
      </filterchain>
    </copy>
    <condition property="_readme.ok">
      <filesmatch textfile="true"
                  file1="tmp/readme-svn.txt" file2="tmp/readme-generated.txt"/>
    </condition>
    <fail unless="_readme.ok">The 'readme.txt' file in your Subversion export contains the wrong product
version.  You should verify this.  If the version is indeed wrong, you should
abort this export, commit an updated 'readme.txt' from a work area, then retag
and re-export.</fail>
  </target>

  <target name="dist"
      depends="state-check, clean-all, javadoc, gen-docs, hsqldb, sqltool, bnd"
          description="Build joint binary + source distribution packages">
    <!--
      -  It's ok to run the bnd target repeatedly.  That would just re-set the
      -  values to what they already were.  Probably just resulting in updating
      -  the modification timestamp of the jar file node.
      -->
    <mkdir dir="dist"/>
    <property name="app.basedir" value="hsqldb-${hsqldb.version}"/>

    <!-- Enforce platform-independent EOL policies on items that will be
         packed.  Generated docs and everything under classes/ already
         have EOLs enforced.
         To make maintenance easier, please order by srcdir, and put that
         attribute first.  Much easier to find what you are interested this
         way.
    -->
    <fixcrlf srcdir="."
             preservelastmodified='true' eol="crlf" includes="*.txt"/>
    <fixcrlf srcdir="." preservelastmodified='true' eol="lf" includes="*.html"/>
    <fixcrlf srcdir="bin" preservelastmodified='true' eol="crlf"
             includes="**/*.txt, **/*.bat, **/*.cmd"/>
    <fixcrlf srcdir="bin" preservelastmodified='true' eol="lf"
             encoding="UTF-8" includes="**/*.sh, **/*.bash, **/*.html"/>
    <fixcrlf srcdir="build" preservelastmodified='true' eol="crlf"
             includes="**/*.txt, **/*.bat, **/*.cmd"/>
    <fixcrlf srcdir="build" preservelastmodified='true' eol="lf"
             encoding="ISO-8859-1" includes="**/*.properties"/>
    <fixcrlf srcdir="build" preservelastmodified='true' eol="lf"
             encoding="UTF-8" includes="**/*.xml, **/*.list, **/*.gradle"/>
    <!-- Docbook or XSLT adds &#13;s on Windows.  Remove them. -->
    <replace dir="doc" includes="*/*.html" token="&amp;#13;"/>
    <fixcrlf srcdir="doc-src" preservelastmodified='true' eol="lf"
             encoding="ISO-8859-1" includes="**/*.properties"/>
    <fixcrlf srcdir="doc-src" preservelastmodified='true' eol="crlf"
             includes="**/*.txt"/>
    <fixcrlf srcdir="doc-src" preservelastmodified='true' eol="lf"
             encoding="UTF-8"
             includes="**/*.cfg, **/*.css, **/*.ent, **/*.java, **/*.rc,
                       **/*.sql, **/*.xml, **/*.html"/>
    <fixcrlf srcdir="sample" preservelastmodified='true' eol="lf"
             encoding="UTF-8" excludes="**/*.txt, **/*.properties"/>
    <fixcrlf srcdir="sample" preservelastmodified='true' eol="crlf"
             includes="**/*.txt"/>
    <fixcrlf srcdir="sample" preservelastmodified='true' eol="lf"
             encoding="ISO-8859-1" includes="**/*.properties"/>
    <fixcrlf srcdir="src"
             preservelastmodified='true' eol="lf" encoding="ISO-8859-1"
             includes="**/*.properties, **/*.text"/>
    <fixcrlf srcdir="src" preservelastmodified='true' eol="lf" encoding="UTF-8"
             includes="**/*.flex, **/*.html, **/*.java"/>
    <fixcrlf srcdir="stylesheets" preservelastmodified='true' eol="lf"
             encoding="UTF-8"/>
    <!-- Exclusing test-src from distros, for now
    <fixcrlf srcdir="test-src"
             preservelastmodified='true' eol="lf" encoding="ISO-8859-1"
             includes="**/*.properties"/>
    <fixcrlf srcdir="test-src" preservelastmodified='true' eol="lf"
             encoding="UTF-8"
             includes="**/*.java, **/*.dtd, **/*.ent, **/*.exp, **/*.inc,
                       **/*.sql, **/*.src, **/*.xml"/>
    -->

    <fixcrlf srcdir="testrun" preservelastmodified='true' eol="lf"
             encoding="UTF-8" includes="**/*.bash"/>
    <fixcrlf srcdir="testrun" preservelastmodified='true' eol="crlf"
             includes="**/*.txt"/>
    <!-- NOTE:  The file testrun/hsqldb/TestSelf.txt has something in it that
         causes any Ant filter (on UNIX) to corrupt an umlauted character.
         The problem is not with the umlauted character, but is the side-effect
         of something else in the file.  I can pull the umlauted "ZÃ¼rich"
         string out of that file and put it into its own UTF-8 file, and Ant
         can filter that just fine. -->
    <fixcrlf srcdir="testrun"
             preservelastmodified='true' eol="lf" encoding="UTF-8"
             includes="**/*.sql, **/*.dsv, **/*.isql, **/*.nsql, **/*.inter"/>

    <mkdir dir="data"/>
    <zip destfile="dist/${app.basedir}.zip">
      <zipfileset prefix="${app.basedir}/hsqldb" dir="."
                  includes="**/*.cmd, **/*.bat, **/*.bash, **/*.sh, **/*.pl,
                            **/*.php, **/*.init, **/*.py, build/gradlew"
                  filemode="0755"
                  excludes="**/.*/**, build/local**, test-src/**,
                            *gradled*, build/gradle-app.setting,
                            classes/**, dist/**, local*/**, tmp/**"/>
      <zipfileset prefix="${app.basedir}/hsqldb" dir="."
                  excludes="**/.*/**, **/*.cmd, **/*.bat, **/*.bash, **/*.sh,
                  test-src/**, **/*.pl, **/*.php, **/*.init, **/*.py
                  build/build.properties, build/local**, build/ivysettings.xml,
                  classes/**, dist/**, local*/**, tmp/**, doc-src/images/db/**,
                  build/ivysettings.xml, stylesheets/rng-catalog.xml,
                  build/gradlew, *gradled*, build/gradle-app.setting"/>
    </zip>
  </target>

  <target name="-bnd-ivy-setup">
    <ivy:cachepath conf="bnd-jar" pathid="bnd-jar.cpref"/>
  </target>

  <target name="bnd" depends="-bnd-ivy-setup"
          description="Write OSGI properties to manifest of 'hsqldb.jar' file">
    <move overwrite="true" failonerror="false"
           file="lib/hsqldb.jar" tofile="lib/hsqldb.prebnd"/>
    <available property="injar.present" type="file" file="lib/hsqldb.prebnd"/>
    <fail message="Can't use target 'bnd' if 'hsqldb.jar' file not built yet"
           unless="injar.present"/>
    <!-- Purposefully not using the bndwrap task available for this purpose,
         because the docs don't explain how to use the attributes clearly enough
         to figure out how to use it. -->
    <pathconvert property="bndjar.file" refid="bnd-jar.cpref"/>
    <java failonerror="true" fork="true" dir="lib" classpath="${bndjar.file}"
          classname="aQute.bnd.main.bnd">
      <sysproperty key="hsqldb.version" value="${hsqldb.version}"/>
      <sysproperty key="build.vendor" value="${user.name}"/>
      <sysproperty key="hsqldb.title" value="${hsqldb.title}"/>
      <arg value="wrap"/>
      <arg value="-output"/>
      <arg value="hsqldb.jar"/>
      <arg value="-properties"/>
      <arg file="build/hsqldb.bnd"/>
      <arg value="hsqldb.prebnd"/>
    </java>
    <delete file="lib/hsqldb.prebnd"/>
  </target>
</project>
