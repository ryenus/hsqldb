defaultTasks 'dist'

/**
 * $Id$
 *
 *   "build-dist.gradle" and "build-dist.xml" are separate from the main
 *   "build.*" files specifically because they are not intended for normal
 *   end-user or developer usage.
 *   They are only for generating full distributable packages of the app.
 *   This build file is NOT necessary to build a distributable jar file:
 *   that is the purpose of several tasks/targets in the main build files.
 *
 *   PREP:  Before building a public distribution, you must:
 *      1: Run task/targets 'javadoc' and 'javadocdev', watching for JavaDoc
 *         authoring mistakes, and fix them.
 *      2: Update HyperSQL minor or version number if required in file
 *         "../doc-src/guide/entities/versions.ent".
 *      3: Run "svn info ../src/org/hsqldb/cmdline/Sql????.java" to determine
 *         the current versions of SqlTool.java and SqlFile.java.
 *         Update the revision values in file
 *         "../doc-src/uti-guide/entities/versions.ent" accordingly.
 *      4: Update property 'hsqldb.version' in file 'build.xml'.
 *      5: Execute task/target 'refresh-verbatim' to update code in our docs.
 *      6: Execute task/target 'update-readme' to substitute updated variables
 *         into some doc file(s).
 *      7: Manually update the version displayed in file "../readme.txt".
 *         Fred doesn't want this one automated.
 *      8: Commit all of the work above.
 *      9: Verify that docs build successfully.
 *     10. Make a release tag.
 *
 *   USAGE:
 *       1: Set up your desired build environment (JAVA_HOME set, etc.), and
 *          if you will be using Ant directly instead of Gradle, add Ant to
 *          your search path,
 *       2: Do a Subversion export with the release tag to a NEW directory
 *       3: If you don't have a .properties file set up for this purpose
 *          already, then make one outside of this work area with a distinctive
 *          name (for auditing and so you can archive it and/or re-use it for
 *          future distribution builds), then copy it to "build.properties"
 *          in this directory.  (If on a good operating system, just sym-link).
 *          IMPORTANT QUIRK:  This file may not use ${} properties in values,
 *          since that feature is incompatible with the "-propertyfile"
 *          switch that we will use below.
 *          This file must set Ant properties "build.label", "build.vendor",
 *          "dbimage.path".  (See following section about optional properties).
 *          It MUST also set Gradle property 'distBuild' to 'true' until such
 *          time as the '-b build-dist.gradle' switch will work.  (See "Once
 *          Gradle..." comment in #4 about that).
 *       4: Run
 *              gradlew -i                # Gradle users
 *          or
 *              ant -f build-dist.xml     # Ant users
 *          from the build directory.
 *          (Once Gradle fixes the 'settings.gradle'/project name problem,
 *          I will modify the build files and then the the Gradle command
 *          above will need to add -b switch as follow:
 *              gradlew -i -b build-dist.gradle   # Gradle users
 *          )
 *          Ant users only:
 *          If building directly with Ant, you don't have Ivy in your
 *          CLASSPATH, you will be instructed how to satisfy that requirement.
 *
 *   OPTIONAL ANT PROPERTIES
 *       I suggest setting properties nsstylebase.url, dbxirng.url,
 *         dbcentx.url in file "local-docbook.properties" or
 *         "build.properties" in the external (or shared) build properties
           explained above), according to the
 *         reasons documented at the top of "build-docbook.xml", and according
 *         to the instructions there (except use the specified properties file).
 *       Add settings for build.debug and build.optimize to change the default
 *         compilation settings.
 *
 *   You may add or edit some files without them being added to the
 *   distribution that you build:  build/build.properties,
 *   build/local*.properties, tmp/*, classes/*, dist/*.
 *   If you don't know if something will have an effect on the distribution
 *   you are building, then *don't do it*.
 *   If you were to add a "todo.txt" file to the main or build directory;
 *   or run "gradle hsqldbtest" (or "ant hsqldbtest), for example, artifacts
 *   would be added to the distro.
 */

assert project.name == 'hsqldb':
    '''Due to a bug in Gradle, to use build-dist tasks, you must set Gradle
build property 'distBuild' to 'true', then use the main Gradle build file.
This complexity should be removed before version 1.0 of Gradle.
'''

import org.apache.tools.ant.types.Path

addlAntBuildFiles = [file('build-dist.xml')]

addlAntBuildClosures = [{
        it.import.@file = 'build-gradled.xml'
        it.@name = it.@name.text() + '_gradled'
        it.attributes().remove('basedir')
        it.target.find{it.@name == '-bnd-ivy-setup'}.cachepath.replaceNode {}
    }
]

ant.references['bnd-jar.cpref'] =
        new Path(ant.project, configurations['bndJar'].asPath)
