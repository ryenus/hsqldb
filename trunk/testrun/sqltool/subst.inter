/*
 * $Id$
 *
 * Tests interactive commands :s*
 */

\c false
/* Since running interactively, need to either invoke with --abortOnErr switch,
 * or use "\c false" Special command, to detect failures. */

CREATE TABLE t(id INTEGER GENERATED BY DEFAULT AS IDENTITY, vc VARCHAR);

/* Just verify that an error is not thrown by the two following commands.
   And that they don't effect the command history. */
:b
:h

INSERT INTO t(vc) VALUES('one')

/* In interactive mode, the blank line above will move the command to the
 * edit buffer without executing it. */

:s/n/MM/;
/*Since this executes, command #3 in history will become "INSERT... 'oMMe'".*/

SELECT count(*) FROM t;
*if (*? != 1)
    \q Blank lines not behaving right in Interactive mode
*end if

SELECT count(*) FROM t WHERE vc = 'oMMe';
*if (*? != 1)
    \q Simple substitution of edit buffer failed.
*end if

/* Tailing white space in line below, on purpose. */
:3   s@M@.@g;  

SELECT count(*) FROM t;
*if (*? != 2)
    \q Recall + subst. + exec failed / 1
*end if

SELECT count(*) FROM t WHERE vc = 'o..e';
*if (*? != 1)
    \q Recall + subst. + exec failed / 2
*end if

:3
/* Purposeful trailing white space in following line */
:s:MM:x:g   
:;

SELECT count(*) FROM t;
*if (*? != 3)
    \q Recall + subst., then exec failed / 1
*end if

SELECT count(*) FROM t WHERE vc = 'oxe';
*if (*? != 1)
    \q Recall + subst., then exec failed / 2
*end if

/* Test simple recall and execution */
:3
:;
:3;
:;
/* SELECT count(*) FROM t; */
*if (*? != 6)
    \q Recall and execs failed / 1
*end if

SELECT vc FROM t;
SELECT count(*) FROM t WHERE vc = 'oMMe';
*if (*? != 4)
    \q Recall and execs failed / 2
*end if
