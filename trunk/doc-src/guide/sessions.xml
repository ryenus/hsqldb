<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:ns6="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/1999/xhtml"
         xmlns:ns4="http://www.w3.org/1998/Math/MathML"
         xmlns:ns3="http://www.w3.org/2000/svg"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title xml:id="sessions-title">Sessions and Transactions</title>

  <info>
    <authorgroup>
      <author>
        <personname><firstname>Fred</firstname><surname>Toussi</surname></personname>

        <affiliation>
          <orgname>The HSQL Development Group</orgname>
        </affiliation>
      </author>
    </authorgroup>

    <releaseinfo>$Revision: 734 $</releaseinfo>

    <pubdate>$Date: 2009-01-08 19:19:51 +0000 (Thu, 08 Jan 2009) $</pubdate>

    <keywordset>
      <keyword>Hsqldb</keyword>

      <keyword>HyperSQL</keyword>

      <keyword>SQL</keyword>
    </keywordset>

    <legalnotice>
      <para>Copyright 2009 Fred Toussi. Permission is granted to distribute
      this document without any alteration under the terms of the HSQLDB
      license. Additional permission is granted to the HSQL Development Group
      to distribute this document with or without alterations under the terms
      of the HSQLDB license.</para>
    </legalnotice>
  </info>

  <section>
    <title>Overview</title>

    <para>All SQL statements are executed in sessions.</para>
  </section>

  <section>
    <title>Statements</title>

    <!-- From Foundation chapt. 17 -->

    <indexterm significance="preferred" type="sql">
      <primary>SET AUTOCOMMIT</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET AUTOCOMMIT</emphasis></simpara>

    <simpara><emphasis>set autocommit command</emphasis></simpara>

    <simpara><literal>&lt;set autocommit statement&gt; ::= SET AUTOCOMMIT {
    TRUE | FALSE }</literal></simpara>

    <simpara>When an SQL session is started by creating a JDBC connection, it
    is in AUTOCOMMIT mode. In this mode, after each SQL statement a COMMIT is
    performed automatically. This statement changes mode. It is equivalent to
    using the <methodname>setAutoCommit( boolean autoCommit)</methodname>
    method of the JDBC <classname>Connection</classname> object.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>START TRANSACTION</primary>
    </indexterm>

    <simpara><emphasis role="bold">START TRANSACTION</emphasis></simpara>

    <simpara><emphasis>start transaction statement</emphasis></simpara>

    <simpara><literal>&lt;start transaction statement&gt; ::= START
    TRANSACTION [ &lt;transaction characteristics&gt; ]</literal></simpara>

    <simpara>Start an SQL transaction and set its characteristics. All
    transactional SQL statements start a transaction automatically, therefore
    using this statement is not necessary. If the statement is called in the
    middle of a transaction, an exception is thrown.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET TRANSACTION</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET TRANSACTION</emphasis></simpara>

    <simpara><emphasis>set next transaction
    characteristics</emphasis></simpara>

    <simpara><literal>&lt;set transaction statement&gt; ::= SET [ LOCAL ]
    TRANSACTION &lt;transaction characteristics&gt;</literal></simpara>

    <simpara>Set the characteristics of the next transaction in the current
    session. This statement has an effect only on the next transactions and
    has no effect on the future transactions after the next.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>transaction characteristics</primary>
    </indexterm>

    <simpara><emphasis role="bold">transaction
    characteristics</emphasis></simpara>

    <simpara><emphasis>transaction characteristics</emphasis></simpara>

    <simpara><literal>&lt;transaction characteristics&gt; ::= [
    &lt;transaction mode&gt; [ { &lt;comma&gt; &lt;transaction mode&gt; }... ]
    ]</literal></simpara>

    <simpara><literal>&lt;transaction mode&gt; ::= &lt;isolation level&gt; |
    &lt;transaction access mode&gt; | &lt;diagnostics
    size&gt;</literal></simpara>

    <simpara><literal>&lt;transaction access mode&gt; ::= READ ONLY | READ
    WRITE</literal></simpara>

    <simpara><literal>&lt;isolation level&gt; ::= ISOLATION LEVEL &lt;level of
    isolation&gt;</literal></simpara>

    <simpara><literal>&lt;level of isolation&gt; ::= READ UNCOMMITTED | READ
    COMMITTED | REPEATABLE READ | SERIALIZABLE</literal></simpara>

    <simpara><literal>&lt;diagnostics size&gt; ::= DIAGNOSTICS SIZE &lt;number
    of conditions&gt;</literal></simpara>

    <simpara><literal>&lt;number of conditions&gt; ::= &lt;simple value
    specification&gt;</literal></simpara>

    <simpara>Specify transaction characteristics.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET CONSTRAINTS</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET CONSTRAINTS</emphasis></simpara>

    <simpara><emphasis>set constraints mode statement</emphasis></simpara>

    <simpara><literal>&lt;set constraints mode statement&gt; ::= SET
    CONSTRAINTS &lt;constraint name list&gt; { DEFERRED | IMMEDIATE
    }</literal></simpara>

    <simpara><literal>&lt;constraint name list&gt; ::= ALL | &lt;constraint
    name&gt; [ { &lt;comma&gt; &lt;constraint name&gt; }...
    ]</literal></simpara>

    <simpara>If the statement is issued during a transaction, it applies to
    the rest of the current transaction. If the statement is issued when a
    transaction is not active then it applies only to the next transaction in
    the current session.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SAVEPOINT</primary>
    </indexterm>

    <simpara><emphasis role="bold">SAVEPOINT</emphasis></simpara>

    <simpara><emphasis>savepoint statement</emphasis></simpara>

    <simpara><literal>&lt;savepoint statement&gt; ::= SAVEPOINT &lt;savepoint
    specifier&gt;</literal></simpara>

    <simpara><literal>&lt;savepoint specifier&gt; ::= &lt;savepoint
    name&gt;</literal></simpara>

    <simpara>Establish a savepoint. This command is used during an SQL
    transaction. It establishes a milestone for the current transaction. The
    SAVEPOINT can be used at a later point in the transaction to rollback the
    transaction to the milestone.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>RELEASE SAVEPOINT</primary>
    </indexterm>

    <simpara><emphasis role="bold">RELEASE SAVEPOINT</emphasis></simpara>

    <simpara><emphasis>release savepoint statement</emphasis></simpara>

    <simpara><literal>&lt;release savepoint statement&gt; ::= RELEASE
    SAVEPOINT &lt;savepoint specifier&gt;</literal></simpara>

    <simpara>Destroy a savepoint. This command is rarely used as it is not
    very useful. It removes a SAVEPOINT that has already been
    defined.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>COMMIT</primary>
    </indexterm>

    <simpara><emphasis role="bold">COMMIT WORK</emphasis></simpara>

    <simpara><emphasis>commit statement</emphasis></simpara>

    <simpara><literal>&lt;commit statement&gt; ::= COMMIT [ WORK ] [ AND [ NO
    ] CHAIN ]</literal></simpara>

    <simpara>Terminate the current SQL-transaction with commit.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>ROLLBACK</primary>
    </indexterm>

    <simpara><emphasis role="bold">ROLLBACK</emphasis></simpara>

    <simpara><emphasis>rollback statement</emphasis></simpara>

    <simpara><literal>&lt;rollback statement&gt; ::= ROLLBACK [ WORK ] [ AND [
    NO ] CHAIN ]</literal></simpara>

    <simpara>Rollback the current SQL transaction and terminate it. The
    statment rolls back all the actions performed during the transaction. If
    NO CHAIN is specified, a new SQL transaction is started just after the
    rollback. The new transaction inherits the properties of the old
    transaction.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>ROLLBACK TO SAVEPOINT</primary>
    </indexterm>

    <simpara><emphasis role="bold">ROLLBACK TO SAVEPOINT</emphasis></simpara>

    <simpara><emphasis>rollback statement</emphasis></simpara>

    <simpara><literal>&lt;rollback statement&gt; ::= ROLLBACK [ WORK ] TO
    SAVEPOINT &lt;savepoint specifier&gt;</literal></simpara>

    <simpara>Rollback part of the current SQL transaction and continue the
    transaction. The statement rolls back all the action performed after the
    specified SAVEPOINT was created. The same effect can be achieved with the
    <literal>rollback( Savepoint savepoint)</literal> method of the JDBC
    <classname>Connection</classname> object.</simpara>

    <!-- From Foundation chapt. 18 -->

    <indexterm significance="preferred" type="sql">
      <primary>DISCONNECT</primary>
    </indexterm>

    <simpara><emphasis role="bold">DISCONNECT</emphasis></simpara>

    <simpara><emphasis>disconnect statement</emphasis></simpara>

    <simpara><literal>&lt;disconnect statement&gt; ::=
    DISCONNECT</literal></simpara>

    <simpara>Terminate the current SQL session. Closing a JDBC connection has
    the same effect as this command.</simpara>

    <!-- From Foundation chapt. 19 -->

    <indexterm significance="preferred" type="sql">
      <primary>SET SESSION CHARACTERISTICS</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET SESSION
    CHARACTERISTICS</emphasis></simpara>

    <simpara><emphasis>set session characteristics
    statement</emphasis></simpara>

    <simpara><literal>&lt;set session characteristics statement&gt; ::= SET
    SESSION CHARACTERISTICS AS &lt;session characteristic
    list&gt;</literal></simpara>

    <simpara><literal>&lt;session characteristic list&gt; ::= &lt;session
    characteristic&gt; [ { &lt;comma&gt; &lt;session characteristic&gt; }...
    ]</literal></simpara>

    <simpara><literal>&lt;session characteristic&gt; ::= &lt;session
    transaction characteristics&gt;</literal></simpara>

    <simpara><literal>&lt;session transaction characteristics&gt; ::=
    TRANSACTION &lt;transaction mode&gt; [ { &lt;comma&gt; &lt;transaction
    mode&gt; }... ]</literal></simpara>

    <simpara>Set one or more characteristics for the current SQL-session. This
    command is used to set the transaction mode for the session. This endures
    until the next use of this command.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET SESSION AUTHORIZATION</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET SESSION
    AUTHORIZATION</emphasis></simpara>

    <simpara><emphasis>set session user identifier
    statement</emphasis></simpara>

    <simpara><literal>&lt;set session user identifier statement&gt; ::= SET
    SESSION AUTHORIZATION &lt;value specification&gt;</literal></simpara>

    <simpara>Set the SQL-session user identifier. This statement changes the
    current user. The user that executes this command must have the
    CHANGE_AUTHORIZATION role, or the DBA role. After this statement is
    executed, all SQL statements are executed with the privileges of the new
    user.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET ROLE</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET ROLE</emphasis></simpara>

    <simpara><emphasis>set role statement</emphasis></simpara>

    <simpara><literal>&lt;set role statement&gt; ::= SET ROLE &lt;role
    specification&gt;</literal></simpara>

    <simpara><literal>&lt;role specification&gt; ::= &lt;value
    specification&gt; | NONE</literal></simpara>

    <simpara>Set the SQL-session role name and the current role name for the
    current SQL-session context. The user that executes this command must have
    the specifid role. If NONE is specified, then the previous CURRENT_ROLE is
    elminated. The effect of this lasts for the lifetime of the
    session.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET TIME ZONE</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET TIME ZONE</emphasis></simpara>

    <simpara><emphasis>set local time zone statement</emphasis></simpara>

    <simpara><literal>&lt;set local time zone statement&gt; ::= SET TIME ZONE
    &lt;set time zone value&gt;</literal></simpara>

    <simpara><literal>&lt;set time zone value&gt; ::= &lt;interval value
    expression&gt; | LOCAL</literal></simpara>

    <simpara>Set the current default time zone displacement for the current
    SQL-session. When the session starts, the time zone displacement is set to
    the time zone of the client. This command changes the time zone
    displacement. The effect of this lasts for the lifetime of the
    session.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET CATALOG</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET CATALOG</emphasis></simpara>

    <simpara><emphasis>set catalog statement</emphasis></simpara>

    <simpara><literal>&lt;set catalog statement&gt; ::= SET &lt;catalog name
    characteristic&gt;</literal></simpara>

    <simpara><literal>&lt;catalog name characteristic&gt; ::= CATALOG
    &lt;value specification&gt;</literal></simpara>

    <simpara>Set the default schema name for unqualified names used in SQL
    statements that are prepared or executed directly in the current sessions.
    As there is only one catalog in the database, only the name of this
    catalog can be used.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET SCHEMA</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET SCHEMA</emphasis></simpara>

    <simpara><emphasis>set schema statement</emphasis></simpara>

    <simpara><literal>&lt;set schema statement&gt; ::= SET &lt;schema name
    characteristic&gt;</literal></simpara>

    <simpara><literal>&lt;schema name characteristic&gt; ::= SCHEMA &lt;value
    specification&gt; | &lt;schema name&gt;</literal></simpara>

    <simpara>Set the default schema name for unqualified names used in SQL
    statements that are prepared or executed directly in the current sessions.
    The effect of this lasts for the lifetime of the session. The SQL Standard
    form requires the schema name as a single-quoted string. HyperSQL also
    allows the use of the identifier for the schema.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET PATH</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET PATH</emphasis></simpara>

    <simpara><emphasis>set path statement</emphasis></simpara>

    <simpara><literal>&lt;set path statement&gt; ::= SET &lt;SQL-path
    characteristic&gt;</literal></simpara>

    <simpara><literal>&lt;SQL-path characteristic&gt; ::= PATH &lt;value
    specification&gt;</literal></simpara>

    <simpara>Set the SQL-path used to determine the subject routine of routine
    invocations with unqualified routine names used in SQL statements that are
    prepared or executed directly in the current sessions. The effect of this
    lasts for the lifetime of the session.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET MAXROWS</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET MAXROWS</emphasis></simpara>

    <simpara><emphasis>set max rows statement</emphasis></simpara>

    <simpara><literal>&lt;set max rows statement&gt; ::= SET MAXROWS
    &lt;unsigned integer literal&gt;</literal></simpara>

    <simpara>Set the maximum number of rows of each result returned by
    executing queries. This statement has a similar effect to the
    <methodname>setMaxRows(int max)</methodname> method of the JDBC
    <classname>Statement</classname> interface, but it affects all the results
    returned in the lifetime of the session. The normal operation of the
    session has no limit on the number of rows returned. If <literal>SET
    MAXROWS 0</literal> is specified, normal operation is restored.</simpara>

    <simpara>This command is not recommended for general use. The only
    legitimate use of this command is for checking and testing queries that
    may return very larg numbers of rows.</simpara>
  </section>
</chapter>
