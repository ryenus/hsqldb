<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:ns6="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/1999/xhtml"
         xmlns:ns4="http://www.w3.org/1998/Math/MathML"
         xmlns:ns3="http://www.w3.org/2000/svg"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title xml:id="system-title">System Management</title>

  <info>
    <authorgroup>
      <author>
        <personname><firstname>Fred</firstname><surname>Toussi</surname></personname>

        <affiliation>
          <orgname>The HSQL Development Group</orgname>
        </affiliation>
      </author>
    </authorgroup>

    <releaseinfo>$Revision: 734 $</releaseinfo>

    <pubdate>$Date: 2009-01-08 19:19:51 +0000 (Thu, 08 Jan 2009) $</pubdate>

    <keywordset>
      <keyword>Hsqldb</keyword>

      <keyword>HyperSQL</keyword>

      <keyword>SQL</keyword>
    </keywordset>

    <legalnotice>
      <para>Copyright 2009 Fred Toussi. Permission is granted to distribute
      this document without any alteration under the terms of the HSQLDB
      license. Additional permission is granted to the HSQL Development Group
      to distribute this document with or without alterations under the terms
      of the HSQLDB license.</para>
    </legalnotice>
  </info>

  <section>
    <title>Overview</title>

    <para>HyperSQL supports a set of commands for managing the database and
    its properties. These statements not defined by the SQL standard and are
    specific to HyperSQL.</para>
  </section>

  <section>
    <title>Statements</title>

    <indexterm significance="preferred" type="sql">
      <primary>CHECKPOINT</primary>
    </indexterm>

    <simpara><emphasis role="bold">CHECKPOINT</emphasis></simpara>

    <simpara><emphasis>checkpoint statement</emphasis></simpara>

    <simpara><literal>&lt;checkpoint statement&gt; ::= CHECKPOINT
    [DEFRAG]</literal></simpara>

    <simpara>Closes the database files, rewrites the script file, deletes the
    log file and opens the database. If <literal>DEFRAG</literal> is
    specified, also shrinks the *.data file to its minumum size. Only a user
    with the DBA role can execute this statement.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SCRIPT</primary>
    </indexterm>

    <simpara><emphasis role="bold">SCRIPT</emphasis></simpara>

    <simpara><emphasis>script statement</emphasis></simpara>

    <simpara><literal>&lt;script statement&gt; ::= SCRIPT [&lt;file
    name&gt;]</literal></simpara>

    <simpara>Returns a script containing SQL statments that define the
    database, its users, and its schema objects. If <literal>&lt;file
    name&gt;</literal> is not specified, the statements are returned in a
    Result, with each row containing an SQL statement.No data statements are
    included in this form. The optional file name is a single-quoted string.
    If <literal>&lt;file name&gt;</literal> is specified, then the script is
    written to the named file. In this case, all the data in all tables of the
    database is included in the script as INSERT statements. Only a user with
    the DBA role can execute this statement.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET CHECKPOINT DEFRAG</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET CHECKPOINT DEFRAG</emphasis></simpara>

    <simpara><emphasis>set checkpoint defrag statement</emphasis></simpara>

    <simpara><literal>&lt;set checkpoint defrag statement&gt; ::= SET
    CHECKPOINT DEFRAG &lt;unsigned integer literal&gt;</literal></simpara>

    <simpara>Sets the threshold for perfoming a DEFRAG during a checkpoint.
    The <literal>&lt;unsigned integer literal&gt;</literal> is the megabytes
    of abandoned space in the *.data file. When a CHECKPOINT is performed
    either as a result of the .log file reaching the limit set by "SET LOGSIZE
    m", or by the user issuing a CHECKPOINT command, the amount of space
    abandoned since the database was opened is checked and if it is larger
    than n, a CHECKPOINT DEFRAG is performed instead of a checkpoint. Only a
    user with the DBA role can execute this statement.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET LOGSIZE</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET LOGSIZE</emphasis></simpara>

    <simpara><emphasis>set log size statement</emphasis></simpara>

    <simpara><literal>&lt;log size statement&gt; ::= SET LOGSIZE &lt;unsigned
    integer literal&gt;</literal></simpara>

    <simpara>Sets the maximum size in MB of the *.log file to the specified
    value. The default maximum size is 200 MB. If the value is zero, no limit
    is used for the size of the file. When the size of the file reaches this
    value, a CHECKPOINT is performed and the the *.log file is cleared to size
    0. Only a user with the DBA role can execute this statement.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET PROPERTY</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET PROPERTY</emphasis></simpara>

    <simpara><emphasis>set property statement</emphasis></simpara>

    <simpara><literal>&lt;set property statement&gt; ::= SET PROPERTY
    &lt;double quoted property name&gt; &lt;boolean or integer
    literal&gt;;</literal></simpara>

    <simpara>Sets a database property. Properties that can be set using this
    command are either boolean or integral and are listed in the chapter.**.
    Only a user with the DBA role can execute this statement.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET SCRIPTFORMAT</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET SCRIPTFORMAT</emphasis></simpara>

    <simpara><emphasis>set scriptformat statement</emphasis></simpara>

    <simpara><literal>&lt;set script format statement&gt; ::= SET SCRIPTFORMAT
    {TEXT | BINARY | COMPRESSED};</literal></simpara>

    <simpara>Changes the format of the *.script file. The default format of
    the *.script file is TEXT. This has the advantage that the SQL statements
    can be viewed, and in some cases, edited . BINARY and COMPRESSED formats
    are slightly faster and more compact than the default TEXT. Recommended
    only for very large script files. This command performs a CHECKPOINT. Only
    a user with the DBA role can execute this statement.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET WRITE DELAY</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET WRITE DELAY</emphasis></simpara>

    <simpara><emphasis>set write delay statement</emphasis></simpara>

    <simpara><literal>&lt;set write delay statement&gt; ::= SET WRITE_DELAY {{
    TRUE | FALSE } | &lt;seconds value&gt; | &lt;milliseconds value&gt;
    MILLIS};</literal></simpara>

    <para>Set the WRITE_DELAY property of the database. The WRITE_DELAY
    controls the frequency of file sync for the log file. When WRITE_DELAY is
    set to FALSE or 0, the sync takes place immediately at each COMMIT.
    WRITE_DELAY TRUE performs the sync once every 10 seconds (which is the
    default). A numeric value can be specified instead.</para>

    <para>The purpose of this command is to control the amount of data loss in
    case of a total system crash. A delay of 1 second means at most the data
    written to disk during the last second before the crash is lost. All data
    written prior to this has been synced and should be recoverable.</para>

    <para>A write delay of 0 impacts performance in high load situations, as
    the engine has to wait for the file system to catch up.</para>

    <para>To avoid this, you can set write delay down to 10
    milliseconds.</para>

    <para>Each time the SET WRITE_DELAY statement is executed with any value,
    a sync is immediately performed. Only a user with the DBA role can execute
    this statement.</para>

    <indexterm significance="preferred" type="sql">
      <primary>SHUTDOWN</primary>
    </indexterm>

    <simpara><emphasis role="bold">SHUTDOWN</emphasis></simpara>

    <simpara><emphasis>shutdown statement</emphasis></simpara>

    <simpara><literal>&lt;shutdown statement&gt; ::= SHUTDOWN [IMMEDIATELY |
    COMPACT | SCRIPT]</literal></simpara>

    <simpara>Shutdown the database. If the optional qualifier is not used, a
    normal SHUTDOWN is performed.</simpara>

    <variablelist>
      <varlistentry>
        <term>SHUTDOWN IMMEDIATELY</term>

        <listitem>
          <para>Saves the *.log file and closes the database files. This is
          the quickest form of shutdown. This command should not be used as
          the routine method of closing the database, because when the
          database is accessed next time, it may take a long time to
          start.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>SHUTDOWN COMPACT</term>

        <listitem>
          <para>This is similar to normal SHUTDOWN, but reduces the *.data
          file to its minimum size. It takes longer than normal
          SHUTDOWN.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>SHUTDOWN SCRIPT</term>

        <listitem>
          <para>This is similar to SHUTDOWN COMPACT, but it does not rewrite
          the *.data and text table files. After SHUTDOWN SCRIPT, only the
          *.script and *.properties files remain. At the next startup, these
          files are processed and the .data and .backup files are created.
          This command in effect performs part of the job of SHUTDOWN COMPACT,
          leaving the other part to be performed automatically at the next
          startup.</para>

          <para>This command produces a full script of the database which can
          be edited for special purposes prior to the next startup.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <simpara>Only a user with the DBA role can execute this
    statement.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET DATABASE COLLATION</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET DATABASE COLLATION</emphasis></simpara>

    <simpara><emphasis>set database collation</emphasis></simpara>

    <simpara><literal>&lt;set database collation statement&gt; ::= SET
    DATABASE COLLATION &lt;collation name&gt;</literal></simpara>

    <simpara>Each database can have its own collation. Sets the collation from
    the set of collations supported by HyperSQL. Once this command has been
    issued, the database can be opened in any JVM and will retain its
    collation. Only a user with the DBA role can execute this
    statement.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET IGNORECASE</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET IGNORECASE</emphasis></simpara>

    <simpara><emphasis>set ignore case command</emphasis></simpara>

    <simpara><literal>&lt;set ignore case statement&gt; ::= SET IGNORECASE
    {TRUE | FALSE}</literal></simpara>

    <simpara>Set the type used for VARCHAR table columns. By default,
    character columns in new databases are case sensitive. If <literal>SET
    IGNORECASE TRUE</literal> is specified, all VARCHAR columns in new table
    are set to <literal>VARCHAR_IGNORECASE</literal>. It is possible to
    specify the <literal>VARCHAR_IGNORECASE</literal> type for the definition
    of individual columns. So it is possible to have some columns case
    sensitive and some not, even in the same table. This statement must be
    switched before creating tables. Existing tables and their data are not
    affected. Only a user with the DBA role can execute this
    statement.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>SET REFERENTIAL INTEGRITY</primary>
    </indexterm>

    <simpara><emphasis role="bold">SET REFERENTIAL
    INTEGRITY</emphasis></simpara>

    <simpara><emphasis>set referential integrity
    statement</emphasis></simpara>

    <simpara><literal>&lt;set referential integrity statement&gt; ::= SET
    REFERENTIAL INTEGRITY {TRUE | FALSE}</literal></simpara>

    <simpara>This commands enables or disables the enforcement of referential
    integrity constraints (foreign key constraints). By default, referential
    integrity constraints are checked.</simpara>

    <simpara>The only legitimate use of this statement is before importing
    large amounts of external data into tables that have existing FOREIGN KEY
    constraints. After importing the data, queries must be run to verify all
    rows conform to the FOREIGN KEY constraints and take appropriate actions
    for the rows that do not conform. After verification, the statement must
    be used again to enable constraint enforcement. Only a user with the DBA
    role can execute this statement.</simpara>
    <indexterm significance="preferred" type="sql">
      <primary>*</primary>
    </indexterm>

    <simpara><emphasis role="bold">*</emphasis></simpara>

    <simpara><emphasis>*</emphasis></simpara>

    <simpara><literal>&lt;* statement&gt; ::= </literal></simpara>

    <simpara>**.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>*</primary>
    </indexterm>

    <simpara><emphasis role="bold">*</emphasis></simpara>

    <simpara><emphasis>*</emphasis></simpara>

    <simpara><literal>&lt;* statement&gt; ::= </literal></simpara>

    <simpara>**.</simpara>

    <indexterm significance="preferred" type="sql">
      <primary>*</primary>
    </indexterm>

    <simpara><emphasis role="bold">*</emphasis></simpara>

    <simpara><emphasis>*</emphasis></simpara>

    <simpara><literal>&lt;* statement&gt; ::= </literal></simpara>

    <simpara>**.</simpara>

  </section>
</chapter>
